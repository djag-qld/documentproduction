api.host=${API_DOMAIN_NAME}
spring.freemarker.suffix=.ftl

server.port=5000
server.contextPath=/user
server.secure=true
server.includePortInRequest=false
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto
server.scheme=https
server.use-forward-headers=true
server.forward-headers-strategy=NATIVE
server.tomcat.redirect-context-root=false
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.domain=${DOMAIN_NAME}
server.servlet.session.tracking-modes=cookie

security.require-ssl=true

web.servername=${DOMAIN_NAME}
web.secure=${server.secure}
web.fullUrl=${server.scheme}://${web.servername}${server.contextPath}

cas.login.requireMfa=true
cas.url.prefix=${CAS_ENDPOINT}
cas.ticket.url.prefix=${CAS_TICKET_ENDPOINT}
cas.service.login=${cas.url.prefix}/login
cas.service.logout=${cas.url.prefix}/logout
app.service.home=${web.fullUrl}
cas.role=${CAS_ROLE}

spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=POSTGRESQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.datasource.initialization-mode=always

spring.datasource.url=jdbc-secretsmanager:postgresql://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}
spring.datasource.driver-class-name=com.amazonaws.secretsmanager.sql.AWSSecretsManagerPostgreSQLDriver
spring.datasource.username=${SECRET_NAME}

aws.kms.region=${REGION}
sign.subjectdn=